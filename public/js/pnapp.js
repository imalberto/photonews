/*
 * Copyright (c) 2013, Yahoo! Inc.  All rights reserved.
 * Copyrights licensed under the New BSD License.
 * See the accompanying LICENSE.txt file for terms.
 */

/*jslint nomen:true, browser:true*/
/*global DATA, YUI*/

import {App} from 'app';
import {Model} from 'model';
import {ModelList} from 'model-list';
import {Base} from 'base';
import {log} from 'yui';
import {PN} from 'util';

var PhotoNews;

PhotoNews = Base.create('photoNews', App, [], {

    // TODO
    // views config should not be generated by the server at all :)
    views: {
        home: {
            type: 'Views.HomeView',
            preserve: true
        },
        news: {
            type: 'Views.NewsView',
            preserve: true
        },
        photos: {
            type: 'Views.PhotosView',
            preserve: true
        },
        about: {
            type: 'Views.AboutView',
            preserve: true
        }
    },

    transitions: {
        navigate: 'fade',
        toChild: 'fade',
        toParent: 'fade'
    },

    initializer: function () {
        this.on('photosView:next', this.nextPhotos);
        this.on('photosView:prev', this.prevPhotos);
    },

    render: function (options) {
        var viewContainer,
            container;

        PhotoNews.superclass.render.apply(this, arguments);

        options = options || {};

        if (options.rendered) {
            return this;
        }

        container = this.get('container');
        viewContainer = this.get('viewContainer');

        // Setup initial view here if content is not prerendered on the
        // server

        return this;
    },

    nextPhotos: function () {
        var model;
        model = this.get('model');
        model.load();
    },
    prevPhotos: function () {
        var model;
        model = this.get('model');
        model.load();
    }

}, {

    ATTRS: {}

});

PN.App = PhotoNews;

export default PhotoNews;
